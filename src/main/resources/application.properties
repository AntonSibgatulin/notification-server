# Set the URL, username, and password for the MySQL database
spring.datasource.url=jdbc:mysql://localhost:3306/notification?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC

#postegreSQL
#spring.datasource.url=jdbc:postgresql://localhost:5432/notification?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC

spring.datasource.username=root
spring.datasource.password=

# Use the MySQL driver
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Use the PostgreSQL driver
#spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

org.jobrunr.background-job-server.enabled=true
org.jobrunr.dashboard.enabled=true


#org.jobrunr.database.skip-create=false
#org.jobrunr.database.table-prefix= # allows to set a table prefix (e.g. schema  or schema and tableprefix for all tables. e.g. MYSCHEMA._jobrunr)
#org.jobrunr.database.database-name=jobrunr # Override the default database name to use (e.g. use main application database)
#org.jobrunr.database.datasource= # allows to specify a DataSource specifically for JobRunr
#org.jobrunr.database.type= # if you have multiple supported storage providers available in your application (e.g. an SQL DataSource and Elasticsearch), it allows to specify which database to choose. Valid values are 'sql', 'mongodb', 'redis-lettuce', 'redis-jedis' and 'elasticsearch'.
#org.jobrunr.jobs.default-number-of-retries=10 #the default number of retries for a failing job
#org.jobrunr.jobs.retry-back-off-time-seed=3 #the default time seed for the exponential back-off policy.
#org.jobrunr.job-scheduler.enabled=true
#org.jobrunr.background-job-server.enabled=false
#org.jobrunr.background-job-server.worker-count= #this value normally is defined by the amount of CPU's that are available
#org.jobrunr.background-job-server.poll-interval-in-seconds=15 #check for new work every 15 seconds
#org.jobrunr.background-job-server.delete-succeeded-jobs-after=36 #succeeded jobs will go to the deleted state after 36 hours
#org.jobrunr.background-job-server.permanently-delete-deleted-jobs-after=72 #deleted jobs will be deleted permanently after 72 hours
#org.jobrunr.background-job-server.metrics.enabled=false #Micrometer integration - this was true in v5.
#org.jobrunr.dashboard.enabled=false
#org.jobrunr.dashboard.port=8000 #the port on which to start the dashboard
#org.jobrunr.miscellaneous.allow-anonymous-data-usage=true #this sends the amount of succeeded jobs for marketing purposes

spring.kafka.bootstrap-servers=localhost:9092

spring.redis.host=localhost
spring.redis.port=6379